name: Build

on:
  push:
    tags:
      - "v*"

env:
  BUILD_TYPE: Release

jobs:
  linux-static-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Alpine
      uses: jirutka/setup-alpine@v1
      with:
        branch: v3.20

    - name: Install dependencies
      run: apk add build-base cmake
      shell: alpine.sh --root {0}

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      shell: alpine.sh {0}

    - name: Build
      run: cmake --build build --config ${{env.BUILD_TYPE}}
      shell: alpine.sh {0}

    - run: mv build/libooz.a build/libooz_linux.a

    - uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.ACTIONS_TOKEN }}
        file_glob: true
        file: "**/libooz_linux.a"
        tag: ${{ github.ref }}

  linux-shared-build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v4

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build build --config ${{env.BUILD_TYPE}}

    - run: mv build/libooz.so build/libooz_linux.so

    - uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.ACTIONS_TOKEN }}"
        prerelease: false
        files: |
          **/libooz_linux.so
          **/ooz.h

  windows-build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Configure CMake
        run: cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build build --config ${{env.BUILD_TYPE}}

      - run: |
          mv build\Release\ooz.lib build\Release\ooz_msvc.lib
          mv build\Release\ooz.dll build\Release\ooz_msvc.dll
      
      - uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.ACTIONS_TOKEN }}
          file_glob: true
          file: "**/ooz_msvc.lib"
          tag: ${{ github.ref }}

      - uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.ACTIONS_TOKEN }}
          file_glob: true
          file: "**/ooz_msvc.dll"
          tag: ${{ github.ref }}

  mingw-build:
    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    steps:
      - uses: actions/checkout@v4

      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: base-devel mingw-w64-ucrt-x86_64-toolchain mingw-w64-ucrt-x86_64-cmake

      - name: Configure CMake
        run: cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G "MinGW Makefiles"

      - name: Build
        run: cmake --build build --config ${{env.BUILD_TYPE}}

      - run: |
          mv build/libooz.a build/libooz_mingw.a
          mv build/libooz.dll build/libooz_mingw.dll

      - uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.ACTIONS_TOKEN }}
          file_glob: true
          file: "**/libooz_mingw.a"
          tag: ${{ github.ref }}

      - uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.ACTIONS_TOKEN }}
          file_glob: true
          file: "**/libooz_mingw.dll"
          tag: ${{ github.ref }}
